// <auto-generated />
using System;
using BETSTS.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BETSTS.Repository.Migrations
{
    [DbContext(typeof(DbContext))]
    [Migration("20180628024637_EditIsAdmin")]
    partial class EditIsAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.FootballTeamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Coach");

                    b.Property<string>("Country");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<string>("Name");

                    b.Property<int>("Point");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id");

                    b.ToTable("FootballTeam");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.MatchEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<int>("IsUpdated");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<Guid>("PriceConfigId");

                    b.Property<string>("Stadium");

                    b.Property<DateTime>("TimeMatch");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id");

                    b.HasIndex("PriceConfigId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.MatchTeamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<Guid?>("FootballTeamId");

                    b.Property<int>("Goals");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<Guid>("MatchId");

                    b.Property<decimal>("Rate");

                    b.Property<Guid>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("FootballTeamId");

                    b.HasIndex("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("MatchTeam");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.PriceConfigurationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id");

                    b.ToTable("PriceConfiguration");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccuracyRadius");

                    b.Property<string>("BrowserName");

                    b.Property<string>("BrowserVersion");

                    b.Property<string>("CityName");

                    b.Property<string>("ContinentCode");

                    b.Property<string>("CountryIsoCode");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<string>("DeviceHash");

                    b.Property<string>("DeviceType");

                    b.Property<string>("EngineName");

                    b.Property<string>("EngineVersion");

                    b.Property<DateTimeOffset?>("ExpireOn");

                    b.Property<string>("IpAddress");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.Property<string>("MarkerName");

                    b.Property<string>("MarkerVersion");

                    b.Property<string>("OsName");

                    b.Property<string>("OsVersion");

                    b.Property<string>("PostalCode");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("TimeZone");

                    b.Property<int>("TotalUsage");

                    b.Property<string>("UserAgent");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.RuleConfigurationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<decimal>("Draw");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<decimal>("Lost");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id");

                    b.ToTable("RuleConfiguration");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.User.AmoutEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<decimal>("Sent");

                    b.Property<decimal>("Total");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Amout");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.User.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BannedRemark");

                    b.Property<DateTimeOffset?>("BannedTime");

                    b.Property<string>("ConfirmEmailToken");

                    b.Property<DateTimeOffset?>("ConfirmEmailTokenExpireTime");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset?>("EmailConfirmedTime");

                    b.Property<int?>("IsAdmin");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<string>("OTP");

                    b.Property<DateTimeOffset?>("OTPExpireTime");

                    b.Property<string>("PasswordHash");

                    b.Property<DateTimeOffset?>("PasswordLastUpdatedTime");

                    b.Property<string>("Phone");

                    b.Property<DateTimeOffset?>("PhoneConfirmedTime");

                    b.Property<string>("SetPasswordToken");

                    b.Property<DateTimeOffset?>("SetPasswordTokenExpireTime");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Email");

                    b.HasIndex("Id");

                    b.HasIndex("OTP");

                    b.HasIndex("Phone");

                    b.HasIndex("UserName");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.User.UserProfileEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("Birthday");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<string>("FullName");

                    b.Property<string>("Gender");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.UserBetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<DateTimeOffset?>("DeletedTime");

                    b.Property<int>("IsUpdated");

                    b.Property<Guid?>("LastUpdatedBy");

                    b.Property<DateTimeOffset>("LastUpdatedTime");

                    b.Property<Guid>("MatchId");

                    b.Property<decimal>("MoneyLost");

                    b.Property<Guid>("TeamWinId");

                    b.Property<DateTime>("TimeBet");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DeletedTime");

                    b.HasIndex("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBet");
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.MatchEntity", b =>
                {
                    b.HasOne("BETSTS.Contract.Repository.Models.PriceConfigurationEntity", "PriceConfig")
                        .WithMany("Matches")
                        .HasForeignKey("PriceConfigId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.MatchTeamEntity", b =>
                {
                    b.HasOne("BETSTS.Contract.Repository.Models.FootballTeamEntity", "FootballTeam")
                        .WithMany("MatchTeams")
                        .HasForeignKey("FootballTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BETSTS.Contract.Repository.Models.MatchEntity", "Match")
                        .WithMany("MatchTeams")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.HasOne("BETSTS.Contract.Repository.Models.User.UserEntity", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.User.AmoutEntity", b =>
                {
                    b.HasOne("BETSTS.Contract.Repository.Models.User.UserEntity", "User")
                        .WithOne("Amout")
                        .HasForeignKey("BETSTS.Contract.Repository.Models.User.AmoutEntity", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.User.UserProfileEntity", b =>
                {
                    b.HasOne("BETSTS.Contract.Repository.Models.User.UserEntity", "User")
                        .WithOne("Profile")
                        .HasForeignKey("BETSTS.Contract.Repository.Models.User.UserProfileEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BETSTS.Contract.Repository.Models.UserBetEntity", b =>
                {
                    b.HasOne("BETSTS.Contract.Repository.Models.MatchEntity", "Match")
                        .WithMany("UserBets")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BETSTS.Contract.Repository.Models.User.UserEntity", "User")
                        .WithMany("UserBets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
